{"ast":null,"code":"var _jsxFileName = \"/Users/shyhretebuzaku/Documents/GitHub/creativeedu/src/pages/Grammar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './verbs.json';\nimport Button from 'react-bootstrap/Button';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grammar = () => {\n  _s();\n  const [selectedVerb, setSelectedVerb] = useState(data.verbs[0].infinitive);\n  const handleVerbClick = infinitive => {\n    setSelectedVerb(infinitive);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5 text-center justify-content-center\",\n      children: data.verbs.map(verb => /*#__PURE__*/_jsxDEV(Col, {\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        className: \"mt-5 mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-100\",\n          variant: verb.infinitive === selectedVerb ? \"success\" : \"outline-success\",\n          onClick: () => handleVerbClick(verb.infinitive),\n          children: verb.infinitive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, verb.infinitive, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), selectedVerb && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedVerb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        className: \"w-50 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Conjugation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(data.verbs.find(verb => verb.infinitive === selectedVerb).conjugations).map(([subject, conjugation]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conjugation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, subject, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(Grammar, \"escA6sS2gYgKkTOc0G2BWKC7ee0=\");\n_c = Grammar;\nexport default Grammar;\nvar _c;\n$RefreshReg$(_c, \"Grammar\");","map":{"version":3,"names":["React","useState","data","Button","Container","Row","Col","Table","jsxDEV","_jsxDEV","Grammar","_s","selectedVerb","setSelectedVerb","verbs","infinitive","handleVerbClick","className","children","map","verb","sm","md","lg","xl","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","Object","entries","find","conjugations","subject","conjugation","_c","$RefreshReg$"],"sources":["/Users/shyhretebuzaku/Documents/GitHub/creativeedu/src/pages/Grammar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport data from './verbs.json';\nimport Button from 'react-bootstrap/Button'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table'\n\nconst Grammar = () => {\n    const [selectedVerb, setSelectedVerb] = useState(data.verbs[0].infinitive); \n\n    const handleVerbClick = (infinitive) => {\n      setSelectedVerb(infinitive);\n    };\n  \n    return (\n      <Container className='mt-5'>\n        <Row className='mt-5 text-center justify-content-center'>\n            {data.verbs.map((verb) => (\n            <Col sm={6} md={4} lg={3} xl={2} key={verb.infinitive} className='mt-5 mb-3'>\n                <Button \n                className=\"w-100\"\n                variant={verb.infinitive === selectedVerb ? \"success\" : \"outline-success\"} \n                onClick={() => handleVerbClick(verb.infinitive)}>\n                {verb.infinitive}\n                </Button>\n            </Col>\n            ))}\n        </Row>\n        {selectedVerb && (\n          <div className='text-center'>\n            <h2>{selectedVerb}</h2>\n            <Table bordered hover className='w-50 mx-auto'>\n                <thead>\n                    <tr>\n                        <th>Subject</th>\n                        <th>Conjugation</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {Object.entries(\n                    data.verbs.find((verb) => verb.infinitive === selectedVerb).conjugations\n                    ).map(([subject, conjugation]) => (\n                        <tr key={subject}>\n                            <td>{subject}</td>\n                            <td>{conjugation}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </Table>\n          </div>\n        )}\n      </Container>\n    );\n  };\n  \n  export default Grammar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}