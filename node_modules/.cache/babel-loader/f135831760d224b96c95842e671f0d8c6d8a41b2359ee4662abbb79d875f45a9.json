{"ast":null,"code":"var _jsxFileName = \"/Users/shyhretebuzaku/Documents/GitHub/creativeedu/src/pages/Grammar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport data from './verbs.json';\nimport Button from 'react-bootstrap/Button';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Grammar = () => {\n  _s();\n  const [selectedVerb, setSelectedVerb] = useState(data.verbs[0].infinitive);\n  const handleVerbClick = infinitive => {\n    setSelectedVerb(infinitive);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      marginTop: \"100px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"mt-5 text-center\",\n      children: data.verbs.map(verb => /*#__PURE__*/_jsxDEV(Col, {\n        xs: 3,\n        sm: 3,\n        md: 3,\n        lg: 2,\n        xl: 2,\n        className: \"mb-3\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"w-100\",\n          variant: verb.infinitive === selectedVerb ? \"success\" : \"outline-success\",\n          onClick: () => handleVerbClick(verb.infinitive),\n          children: verb.infinitive\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, verb.infinitive, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), selectedVerb && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedVerb\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        bordered: true,\n        hover: true,\n        className: \"w-50 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Infinitiv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PartizipII\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(data.verbs.find(verb => verb.infinitive === selectedVerb).conjugations).map(([subject, conjugation]) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: conjugation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: subject !== 'partizipII' && Object.entries(conjugation).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [key, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 31\n                }, this), \" \", value]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 23\n            }, this)]\n          }, subject, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(Grammar, \"escA6sS2gYgKkTOc0G2BWKC7ee0=\");\n_c = Grammar;\nexport default Grammar;\nvar _c;\n$RefreshReg$(_c, \"Grammar\");","map":{"version":3,"names":["React","useState","data","Button","Container","Row","Col","Table","jsxDEV","_jsxDEV","Grammar","_s","selectedVerb","setSelectedVerb","verbs","infinitive","handleVerbClick","style","marginTop","children","className","map","verb","xs","sm","md","lg","xl","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","bordered","hover","Object","entries","find","conjugations","subject","conjugation","key","value","_c","$RefreshReg$"],"sources":["/Users/shyhretebuzaku/Documents/GitHub/creativeedu/src/pages/Grammar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport data from './verbs.json';\nimport Button from 'react-bootstrap/Button'\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Table from 'react-bootstrap/Table'\n\nconst Grammar = () => {\n    const [selectedVerb, setSelectedVerb] = useState(data.verbs[0].infinitive); \n\n    const handleVerbClick = (infinitive) => {\n      setSelectedVerb(infinitive);\n    };\n  \n    return (\n      <Container style={{marginTop:\"100px\"}}>\n        <Row className='mt-5 text-center'>\n            {data.verbs.map((verb) => (\n            <Col xs={3} sm={3} md={3} lg={2} xl={2} key={verb.infinitive} className='mb-3'>\n                <Button \n                    className=\"w-100\"\n                    variant={verb.infinitive === selectedVerb ? \"success\" : \"outline-success\"} \n                    onClick={() => handleVerbClick(verb.infinitive)}>\n                    {verb.infinitive}\n                </Button>\n            </Col>\n            ))}\n        </Row>\n        {selectedVerb && (\n          <div className='text-center'>\n            <h2>{selectedVerb}</h2>\n            <Table bordered hover className='w-50 mx-auto'>\n                <thead>\n                    <tr>\n                        <th>Subject</th>\n                        <th>Infinitiv</th>\n                        <th>PartizipII</th>\n                    </tr>\n                </thead>\n                <tbody>\n                  {Object.entries(\n                    data.verbs.find((verb) => verb.infinitive === selectedVerb).conjugations\n                  ).map(([subject, conjugation]) => (\n                    <tr key={subject}>\n                      <td>{subject}</td>\n                      <td>{conjugation}</td>\n                      <td>\n                        {subject !== 'partizipII' &&\n                          Object.entries(conjugation).map(([key, value]) => (\n                            <div key={key}>\n                              <strong>{key}:</strong> {value}\n                            </div>\n                          ))\n                        }\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n            </Table>\n          </div>\n        )}\n      </Container>\n    );\n  };\n  \n  export default Grammar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}